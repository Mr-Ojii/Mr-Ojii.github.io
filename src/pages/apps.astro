---
import { type RepoData } from '../interfaces/RepoData';
import Layout from '../layouts/Layout.astro';
import Card from '../components/Card.astro';

interface Category
{
  name : string;
  repoList : RepoData[];
}

const list : Category[] = [
  {
    name : "ネイティブアプリ",
    repoList : [
      {
        name : "LoopMusicPlayer",
        repoName : "LoopMusicPlayer",
        search : "",
        description : "RPGツクール用OGGなどのLOOPSTART/LOOPLENGTHタグが付いているものを読み取り、ループ再生させる音楽プレーヤー",
        nicovideoIDs : [],
        youtubeIDs : [],
      },
      {
        name : "Pon",
        repoName : "Pon",
        search : "",
        description : "ポン出し用ソフトウェア",
        nicovideoIDs : [],
        youtubeIDs : [],
      },
      {
        name : "SimpleImageViewer",
        repoName : "SimpleImageViewer",
        search : "",
        description : "シンプルな画像ビューワー (Windows用)",
        nicovideoIDs : [],
        youtubeIDs : [],
      },
      {
        name : "ACM-WaveConverter",
        repoName : "ACM-WaveConverter",
        search : "",
        description : "ACMを使用し、任意のWaveファイルを44100Hz/16bitのPCMのWaveファイルに変換するアプリ (Windows用)",
        nicovideoIDs : [],
        youtubeIDs : [],
      },
      {
        name : "CUI-Calclator",
        repoName : "CUI-Calclator",
        search : "",
        description : "CUIで動く簡易的な電卓",
        nicovideoIDs : [],
        youtubeIDs : [],
      },
    ]
  },
  {
    name : "Webアプリ",
    repoList : [
      {
        name : "SVG-VerticalTextHelper",
        repoName : "SVG-VerticalTextHelper",
        search : "",
        description : "縦書き文字のSVGを生成するためのWebアプリ (Krita用に作成)",
        nicovideoIDs : [],
        youtubeIDs : [],
      },
      {
        name : "LoopMusicPlayer-Web",
        repoName : "LoopMusicPlayer-Web",
        search : "",
        description : "LoopMusicPlayerのWeb版 (機能制限版)",
        nicovideoIDs : [],
        youtubeIDs : [],
      },
      {
        name : "BrowserQRCodeScanner",
        repoName : "BrowserQRCodeScanner",
        search : "",
        description : "ブラウザ上でQRコードを読み取るWebアプリ（画面上に表示されているQRコードの読み取りも可能）",
        nicovideoIDs : [],
        youtubeIDs : [],
      },
      {
        name : "TextBitDumper",
        repoName : "TextBitDumper",
        search : "",
        description : "入力された文字列のビット列をDumpするWebアプリ",
        nicovideoIDs : [],
        youtubeIDs : [],
      },
      {
        name : "Easy-POST",
        repoName : "Easy-POST",
        search : "",
        description : "入力されたJSONデータをHTTP POSTするWebアプリ",
        nicovideoIDs : [],
        youtubeIDs : [],
      },
      {
        name : "GetGitHubLatestReleaseAssets",
        repoName : "GetGitHubLatestReleaseAssets",
        search : "",
        description : "GETリクエストでパラメータとして渡されたリポジトリについて、最新リリースのアセットをダウンロードするWebアプリ",
        nicovideoIDs : [],
        youtubeIDs : [],
      },
    ],
  },
]

const titlestr="Mr-Ojiiのアプリ";

---

<Layout title={titlestr}>
  <main>
    <h1>{titlestr}</h1>
    <h2>目次</h2>
    <div class="index">
      {
        list.map((categoryitem) => (
          <h3>{categoryitem.name}</h3>
          <ul>
            {
              categoryitem.repoList.map((item) => {
                const itemhref = "#" + item.name;
                return (
                  <a href={itemhref}><li>{item.name}</li></a>
                )
              })
            }
          </ul>
        ))
      }
    </div>

    <h2>内容</h2>
    {
      list.map((categoryitem) => (
        <h3>{categoryitem.name}</h3>
        <ul role="list" class="link-card-grid">
          {
            categoryitem.repoList.map((item) => (
              <Card
                href={"https://github.com/Mr-Ojii/"+ item.repoName}
                title={item.name}
                body={item.description}
              />
            ))
          }
        </ul>
      ))
    }
  </main>
</Layout>

<style>
  main {
    margin: auto;
    padding: 1rem;
    width: 800px;
    max-width: calc(100% - 2rem);
    color: white;
    font-size: 20px;
    line-height: 1.6;
  }
  .astro-a {
    position: absolute;
    top: -32px;
    left: 50%;
    transform: translatex(-50%);
    width: 220px;
    height: auto;
    z-index: -1;
  }

  .text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }
  .instructions {
    margin-bottom: 2rem;
    border: 1px solid rgba(var(--accent-light), 25%);
    background: linear-gradient(rgba(var(--accent-dark), 66%), rgba(var(--accent-dark), 33%));
    padding: 1.5rem;
    border-radius: 8px;
  }
  .instructions code {
    font-size: 0.8em;
    font-weight: bold;
    background: rgba(var(--accent-light), 12%);
    color: rgb(var(--accent-light));
    border-radius: 4px;
    padding: 0.3em 0.4em;
  }
  .instructions strong {
    color: rgb(var(--accent-light));
  }
  h1 {
    color: lightgray;
  }
  h2 {
    color: #666eff;
  }
  h3 {
    color: #5258cc;
  }
  .link-card-grid {
    display: grid;
    gap: 2rem;
    padding: 0;
  }
  .index {
    border: solid 2px #323742;
    border-radius: 7px;
    padding: 1em;
    background-color: #23262d;
  }
  .index h3 {
    margin-block-start: 0em;
    margin-block-end: 0em;
  }
  .index ul {
    margin: 0;
  }
  .index a {
    color: lightgray;
  }
  .index a:is(:hover) {
      color: rgb(var(--release-accent-light));
  }
</style>
